function output = ARIMAsetup(y, s, varargin)
% system = ARIMAsetup(y, s, 'inp1', inp1, 'inp2', inp2, ...)
%
% Sets up ARIMA general models
% 
% See help for ARIMAmodel.
%
% Author: Diego J. Pedregal
%
% See also: ARIMA, ARIMAmodel, ARIMAvalidate,
%
% Examples
%   m1 = ARIMAsetup(y);
%   m1 = ARIMAsetup(y, 'lambda', []);
%
    menu = inputParser;
    addRequired(menu, 'y', @isfloat);
    addRequired(menu, 's', @isfloat);
    addParameter(menu, 'u', -99999, @isfloat);
    addParameter(menu, 'model', -99999, @isfloat);
    addParameter(menu, 'cnst', 9999.9, @isfloat);
    addParameter(menu, 'criterion', 'bic', @ischar);
    addParameter(menu, 'h', 24, @isfloat);
    addParameter(menu, 'verbose', false, @islogical);
    addParameter(menu, 'lambda', 1.0, @isfloat);
    addParameter(menu, 'maxOrders', [3 2 3 2 1 2]', @isfloat);
    addParameter(menu, 'bootstrap', false, @islogical);
    addParameter(menu, 'nSimul', 5000, @isfloat);
    addParameter(menu, 'fast', false, @islogical);
    parse(menu, y, s, varargin{:});
    lambda = menu.Results.lambda;
    if isnan(lambda)
        lambda = 9999.9;
    end
    cnst = menu.Results.cnst;
    if isnan(cnst)
        cnst = 9999.9;
    end
    % Initialize the output structure
    output = struct('y', menu.Results.y, ...
                    'u', menu.Results.u, ...
                    'model', menu.Results.model, ...
                    'cnst', menu.Results.cnst, ...
                    's', menu.Results.s, ...
                    'h', menu.Results.h, ...
                    'lambda', menu.Results.lambda, ...
                    'bootstrap', menu.Results.bootstrap, ...
                    'nSimul', menu.Results.nSimul, ...
                    'verbose', menu.Results.verbose, ...
                    'maxOrders', menu.Results.maxOrders, ...
                    'criterion', menu.Results.criterion, ...
                    'fast', menu.Results.fast, ...
                    'identDiff', true, ...
                    'identMethod', 'gm', ...
                    'error', [], ...
                    'yFor', [], ...
                    'yForV', [], ...
                    'ySimul', [], ...
                    'table', '', ...
                    'p', [], ...
                    'BIC', NaN, ...
                    'AIC', NaN, ...
                    'AICc', NaN, ...
                    'IC', NaN);
end
